"use strict";

var _DetectUndefESLint = require("./DetectUndefESLint");

describe("Undefined Identifier using ESLint", function () {
  // In ESLint we trust
  it("quick check", function () {
    var actual = (0, _DetectUndefESLint.getUndefinedIdentifier)("\n      a = 1;\n      function f({y, z: {z1}}, u) {\n        const {b,c:{d}} = u;\n        const x = {e, f: 1};\n        const y = {b,c};\n        const z = [document, window, console];\n      }\n    ");

    expect(actual).toEqual(["a", "e", "c"]);
  });

  // fit("get unused with React", () => {
  //   const actual = getErrorIdentifiers(`
  //     import React from 'react';
  //     import A from './A';

  //     export const b = props => <div />;
  //   `);

  //   expect(actual).toEqual({ undefined: [], unused: ["A"] });
  // });

  // fit("get unused without React", () => {
  //   const actual = getErrorIdentifiers(`
  //     import React from 'react';
  //     import A from './A';

  //     const b = 1;
  //   `);

  //   expect(actual).toEqual({ undefined: [], unused: ["React", "A"] });
  // });
});