"use strict";

var _BuildSourceConfig = require("./BuildSourceConfig");

var _Config = require("../Config");

var _Config2 = _interopRequireDefault(_Config);

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var projectPath = _path2.default.join(__dirname, "../../__testfixtures__/sample2"); // import { getImportBuilder } from "./ImportBuilder";

var rootPath = "";

var _scanSourceDir = (0, _BuildSourceConfig.scanSourceDir)(_path2.default.join(projectPath, rootPath)),
    packages = _scanSourceDir.value,
    types = _scanSourceDir.type;

var options = {
  packages: Object.assign({
    "react-dom": {
      main: "ReactDOM"
    }
  }, packages),
  types: types,
  // sources: {
  //   "addons/PropsTransform": {
  //     main: "PropsTransform",
  //   },
  //   "modules/ModuleB/ModuleB": {
  //     main: "ModuleB",
  //   },
  // },
  memberFolders: [],
  rootPath: rootPath,
  projectPath: projectPath
};

test("Resolve import path", function () {
  var config = new _Config2.default(options);
  var getImport = getImportBuilder(config);
  var currentFilePath = "modules/ModuleA/ModuleAUtils.js";

  expect(getImport(currentFilePath, "ReactDOM")).toEqual({
    defaultImport: true,
    path: "react-dom"
  });
  expect(getImport(currentFilePath, "PropsTransform")).toEqual({
    defaultImport: true,
    path: "../../addons/PropsTransform"
  });
  expect(getImport(currentFilePath, "ModuleB")).toEqual({
    defaultImport: true,
    path: "../ModuleB/ModuleB"
  });
});